{"version":3,"sources":["Button/Button.jsx","ImageGallery/ImageGallery.jsx","ImageGalleryItem/ImageGalleryItem.jsx","Loader/Loader.jsx","Modal/Modal.jsx","Searchbar/Searchbar.jsx","App/App.jsx","index.js"],"names":["Button","onClick","className","ImageGallery","children","ImageGalleryItem","img","getLargeImage","map","el","src","webformatURL","alt","tag","id","largeImageURL","LoaderS","type","color","height","width","Component","modal","document","querySelector","Modal","componentDidMount","window","addEventListener","handleKeydown","componentWillUnmount","removeEventListener","e","code","props","onClose","handleBackdropClick","currentTarget","target","createPortal","this","Searchbar","state","input","handleInput","setState","value","handleSubmit","preventDefault","onSubmit","autoComplete","autoFocus","placeholder","onChange","KEY","App","page","query","isOpenModal","largeImage","isLoading","error","image","toggleModal","getQuery","scroll","scrollTo","top","documentElement","scrollHeight","behavior","axiosPictures","URL","axios","get","then","res","prevState","data","hits","catch","finally","prevProps","moreButton","length","Loader","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.faf23272.chunk.js","sourcesContent":["import React from 'react';\n\nconst Button = ({onClick}) => { \n    return (\n      <button className=\"Button\" onClick={onClick}>Load more</button>\n    );\n};\n\nexport default Button;\n","import React from 'react';\n\nconst ImageGallery = ({children}) => { \n    return (\n        <ul className=\"ImageGallery\">{children}</ul>\n    );\n};\n\nexport default ImageGallery;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({img, getLargeImage})=> { \n  return img.map(el => (\n    <li className=\"ImageGalleryItem\" key={el.id}>\n      <img\n        src={el.webformatURL}\n        alt={el.tag}\n        className=\"ImageGalleryItem-image\"\n        id={el.id}\n        key={el.id}\n        onClick={()=>getLargeImage(el.largeImageURL)}\n      />\n    </li>\n    )\n  );\n}\n\nImageGalleryItem.propTypes = {\n  img: PropTypes.array.isRequired,\n  getLargeImage: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\n\nclass LoaderS extends Component { \n  render () {\n    return (\n      <div className=\"loader\">\n        <Loader type=\"Rings\" color=\"#3f51b5\" height={120} width={120}/>\n      </div>\n    );\n  }\n};\n\nexport default LoaderS;","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\n\nconst modal = document.querySelector('#modal-root');\n\nclass Modal extends Component { \n  componentDidMount = () => {\n    window.addEventListener('keydown', this.handleKeydown);\n  }\n  componentWillUnmount = () => {\n    window.removeEventListener('keydown', this.handleKeydown);\n  }\n\n  handleKeydown = e => {\n    if (e.code === 'Escape') this.props.onClose();\n  }\n\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) this.props.onClose();\n  }\n\n  render () {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          <img src={this.props.img} alt=\"\"/>\n        </div>\n      </div>,\n      modal,\n    );\n  }\n};\n\nexport default Modal;","import React, { Component } from 'react';\n\nclass Searchbar extends Component { \n  state = {\n    input: '',\n  };\n  handleInput = e => {\n    this.setState({ input: e.currentTarget.value });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.input);\n    this.setState({ input: '' });\n  };\n  render () {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onChange={this.handleInput}\n          />\n        </form>\n      </header>\n    );\n  }\n};\n\nexport default Searchbar;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport Button from '../Button';\nimport ImageGallery from '../ImageGallery/ImageGallery';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport LoaderS from '../Loader';\nimport Modal from '../Modal';\nimport Searchbar from '../Searchbar';\n\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nconst KEY = `6910569-55cee93e87be6f2f50b24f5a8`;\n\nclass App extends Component { \n  state = {\n    page: 1,\n    query: '',\n    isOpenModal: false,\n    largeImage: '',\n    img: [],\n    isLoading: false,\n    error: null,\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.query !== this.state.query) {\n      this.axiosPictures();\n    };\n  }\n\n  getLargeImage = image => {\n    this.setState({ largeImage: image });\n    this.toggleModal();\n  };\n  getQuery = e => {\n    this.setState({\n      query: e,\n      page: 1,\n      img: [],\n    })\n  }\n  scroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  axiosPictures = () => {\n    this.setState({ isLoading: true });\n    const URL = `https://pixabay.com/api/?q=${this.state.query}&page=${this.state.page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`\n    axios\n      .get(URL)\n      .then(res => {\n        this.setState(prevState => ({\n          img: [...prevState.img, ...res.data.hits],\n          page: prevState.page + 1,\n        }));\n      })\n      .then(() => { if (this.state.page > 2) this.scroll() })\n      .catch(error=> {this.setState({error})})\n      .finally(() => { this.setState({ isLoading: false }) })\n    \n  }\n\n  toggleModal = () => {\n    this.setState({isOpenModal: !this.state.isOpenModal})\n  }\n\n  render() {\n    const { isLoading, img, largeImage, isOpenModal, error } = this.state;\n    const moreButton = img.length > 0 && !isLoading;\n\n    return (\n      <div className='App'>\n        <Searchbar onSubmit={this.getQuery} />\n        {error &&(<p color=\"red\">Please enter another request</p>)}\n        {isOpenModal && <Modal onClose={this.toggleModal} img={largeImage} />}\n        {img.length > 0 ? (\n          <ImageGallery>\n            <ImageGalleryItem getLargeImage={this.getLargeImage} img={img} />\n          </ImageGallery>\n        ) : null}\n        {isLoading && <LoaderS/>}\n        {moreButton && (<Button onClick={this.axiosPictures}/>)}\n      </div>\n    );\n  }\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles.css';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}